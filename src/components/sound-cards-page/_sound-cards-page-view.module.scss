@use 'sass:math';

.page {
	height: 100%;

	&::before {
		content: '123';
		position: absolute;
		z-index: 2;
		top: 0;
		left: 0;
		width: 100vw;
		height: 20px;
		background-color: white;
	}

	&::after {
		content: '';
		position: absolute;
		z-index: 2;
		top: 20px;
		left: 0;
		width: 100vw;
		height: calc(100vw * (77.78 / 1440));
		color: white;
		background-color: white;
		mask: url('/assets/icons/top-line.svg') no-repeat center center/cover;
	}
}

.section {
	position: relative;
	width: 100%;
	padding-block: 200px;

	&::after {
		content: '';
		position: absolute;
		z-index: 2;
		bottom: 0;
		left: 0;
		width: 100vw;
		height: calc(100vw * (116 / 1440));
		color: white;
		background-color: white;
		mask: url('/assets/icons/bottom-line.svg') no-repeat center center/cover;
	}
}

.container {
	display: grid;
	gap: var(--spacing-large);
}

.canvas {
	pointer-events: none;
	position: fixed;
	top: 0;
	left: 0;
	width: 100vw;
	height: 100vh;
}

.controls {
	display: grid;
	grid-template-areas:
		'play-pause-button play-pause-button play-pause-button'
		'mute-button range reset-button';
	grid-template-columns: 1fr 2fr 1fr;
	gap: 30px 10px;
	place-items: center;
	transition: opacity 0.2s ease;

	&:hover {
		opacity: 1;
	}
}

.mute-button {
	cursor: pointer;
	grid-area: mute-button;
	outline-offset: 5px;

	&:focus-visible {
		outline: 2px solid var(--accent-color);
	}

	& > svg {
		width: 40px;
		height: 40px;
		fill: var(--accent-color);
		transition:
			fill 0.3s ease,
			scale 0.3s ease;
	}

	&:hover svg {
		scale: 1.1;
	}

	&:active svg {
		scale: 0.9;
		transition:
			fill 0.3s ease,
			scale 0.05s ease;
	}
}

.play-pause-button {
	will-change: border-width;
	cursor: pointer;
	grid-area: play-pause-button;
	height: 74px;
	border-color: transparent transparent transparent var(--accent-color);
	outline-offset: 10px;
	transition: 0.3s border-color ease;
	transition: scale, border-width;
	transition-timing-function: ease;
	transition-duration: 0.2s;

	&.pause {
		border-style: double;
		border-width: 0 0 0 60px;
	}

	&.play {
		border-style: solid;
		border-width: 37px 0 37px 60px;
	}

	&:hover {
		scale: 1.1;
	}

	&:focus-visible {
		outline: 2px solid var(--accent-color);
	}

	&:active {
		transform: scale(0.9);
		transition-duration: 0.05s;
	}
}

.reset-button {
	cursor: pointer;
	grid-area: reset-button;
	outline-offset: 5px;

	// --- Styles for the button element itself ---
	&:focus-visible {
		outline: 2px solid var(--accent-color);
	}

	// --- Styles for the nested SVG element (Grouped & Ordered) ---

	// Base SVG styles (Specificity: 0,1,1)
	& > svg {
		// You had '>' here originally
		width: 40px;
		height: 40px;
		fill: var(--accent-color);
		transition: all 0.2s ease;
	}

	// SVG styles on button hover (Specificity: 0,2,1)
	&:hover svg {
		// Target descendant (as original)
		rotate: -45deg;
	}

	// SVG styles on button active (Specificity: 0,2,1)
	&:active svg {
		// Target descendant (as original)
		rotate: 45deg;
		transition-duration: 0.05s;
	}
}

.sound-cards {
	display: grid;
	grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
	gap: 50px;
	place-items: center;
}

.range {
	--range-track-top: 0px;
	--range-track-height: 8px;
	--range-output-left: calc(var(--volume) * 1%);
	--range-output-offset-xy: calc(var(--volume) * -1%), 0;

	position: relative;
	z-index: 1;
	grid-area: range;
	width: 100%;
	min-width: 150px;
	height: calc(var(--range-track-height) * 2);
}

.range-label {
	display: block;
	margin-block-end: 45px;
	font-size: 18px;
	text-align: center;
	transition: 300ms;
}

.track {
	position: absolute;
	z-index: -1;
	top: var(--range-track-top);
	width: 100%;
	height: var(--range-track-height);
	border-radius: 10px;
	background-color: #ababab;
}

.thumbs {
	width: 100%;
}

.progress {
	position: absolute;
	z-index: -1;
	top: var(--range-track-top);
	width: calc(var(--volume) * 1%);
	height: var(--range-track-height);
	border-radius: 10px;
	background-color: var(--accent-color);
}

.range-input {
	cursor: pointer;
	position: absolute;
	top: var(--range-track-top);
	width: 100%;
	height: var(--range-track-height);
	appearance: none;
	appearance: none;
	appearance: none;
}

.range-input::-webkit-slider-thumb {
	width: 25px;
	height: 25px;
	border: none;
	border-radius: 50%;
	appearance: none;
	appearance: none;
	background: white;
	box-shadow: 0 0 0 5px inset var(--accent-color);
	transition: 300ms;
}

.range-input::-moz-range-thumb {
	width: 25px;
	height: 25px;
	border: none;
	border-radius: 50%;
	background: white;
	box-shadow: 0 0 0 5px inset var(--accent-color);
	transition: 300ms;
}

.range-input:focus-visible {
	outline: 1px solid var(--accent-color);
	outline-offset: 15px;
}

.range-input:hover::-webkit-slider-thumb,
.range-input:focus-visible::-webkit-slider-thumb {
	box-shadow: 0 0 0 8px inset var(--accent-color);
}

.range-input:hover::-moz-range-thumb,
.range-input:focus-visible::-moz-range-thumb {
	box-shadow: 0 0 0 8px inset var(--accent-color);
}

.range-input:active::-webkit-slider-thumb {
	box-shadow: 0 0 0 15px inset var(--accent-color);
}

.range-input:active::-moz-range-thumb {
	box-shadow: 0 0 0 15px inset var(--accent-color);
}

.range-input:disabled::-webkit-slider-thumb {
	box-shadow: 0 0 0 15px inset var(--disabled-bg);
}

.range-input:disabled::-moz-range-thumb {
	box-shadow: 0 0 0 15px inset var(--disabled-bg);
}

.range-input:focus-visible::-webkit-slider-thumb {
	outline: 2px solid white;
}

.range-input:focus-visible::-moz-range-thumb {
	outline: 2px solid white;
}

.range-output {
	user-select: none;
	position: absolute;
	bottom: 25px;
	left: var(--range-output-left);
	transform: translate(var(--range-output-offset-xy));
	width: 25px;
	text-align: center;
	transition: 300ms;
}

.line-block {
	position: absolute;
	z-index: 1;
	top: 0;
	left: 0;
	width: 100vw;
	transition: 300ms;
}
